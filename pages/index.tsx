import type { NextPage } from "next";
import Head from "next/head";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import TextField from "@mui/material/TextField";
import Grid from "@mui/material/Grid";
import Box from "@mui/material/Box";
import { useState } from "react";
import { useRouter } from "next/router";

interface UserCredentials {
  email: string;
  password: string;
}

const Home: NextPage = () => {
  const [userCredentials, setUserCredentials] = useState<UserCredentials>({
    email: "",
    password: "",
  });
  const router = useRouter();

  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {
    const fieldName = event.target.name;
    const fieldValue = event.target.value;
    setUserCredentials((state) => ({
      ...state,
      [fieldName]: fieldValue,
    }));
  }

  async function handleFormSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();

    try {
      const response = await fetch("http://localhost:3001/api/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(userCredentials),
      });

      const { accessToken } = await response.json();

      if (!accessToken) return;
      document.cookie = `accessToken=${accessToken}; Expires=${new Date(
        9999,
        0,
        1
      ).toUTCString()}; Secure`;

      router.push("/profile");
    } catch (error) {
      // TODO: handle login error
    }
  }

  return (
    <Container maxWidth="xs">
      <Head>
        <title>NestJS Practice UI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box height="100vh" display="flex" alignItems="center">
        <Grid
          onSubmit={handleFormSubmit}
          component="form"
          container
          spacing={2}
        >
          <Grid item xs={12}>
            <Box sx={{ typography: "subtitle1", textAlign: "center" }}>
              <h1>Simple User CRUD</h1>
            </Box>
          </Grid>

          <Grid item xs={12}>
            <TextField
              onChange={handleInputChange}
              value={userCredentials.email}
              required={true}
              id="email"
              name="email"
              type="email"
              label="Email"
              variant="outlined"
              fullWidth
            />
          </Grid>
          <Grid item xs={12}>
            <TextField
              onChange={handleInputChange}
              value={userCredentials.password}
              required={true}
              autoComplete="true"
              id="password"
              name="password"
              type="password"
              label="Password"
              variant="outlined"
              fullWidth
            />
          </Grid>

          <Grid item xs={12} sx={{ mt: 2 }}>
            <Button type="submit" variant="contained" size="large" fullWidth>
              Log in
            </Button>
          </Grid>

          <Grid item xs={12}>
            <Button variant="outlined" size="large" fullWidth>
              Sign up
            </Button>
          </Grid>
        </Grid>
      </Box>
    </Container>
  );
};

export default Home;
